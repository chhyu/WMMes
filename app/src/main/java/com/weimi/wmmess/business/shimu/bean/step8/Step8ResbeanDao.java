package com.weimi.wmmess.business.shimu.bean.step8;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.weimi.wmmess.business.shimu.bean.DaoSession;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "STEP8_RESBEAN".
*/
public class Step8ResbeanDao extends AbstractDao<Step8Resbean, Long> {

    public static final String TABLENAME = "STEP8_RESBEAN";

    /**
     * Properties of entity Step8Resbean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Step8Id = new Property(0, Long.class, "step8Id", true, "_id");
        public final static Property CurrentStepIsChecked = new Property(1, boolean.class, "currentStepIsChecked", false, "CURRENT_STEP_IS_CHECKED");
        public final static Property MinAverageValue = new Property(2, String.class, "minAverageValue", false, "MIN_AVERAGE_VALUE");
        public final static Property MaxAverageValue = new Property(3, String.class, "maxAverageValue", false, "MAX_AVERAGE_VALUE");
        public final static Property AverageValueZhiCha = new Property(4, String.class, "averageValueZhiCha", false, "AVERAGE_VALUE_ZHI_CHA");
        public final static Property AverageValueBiZhiCha = new Property(5, String.class, "averageValueBiZhiCha", false, "AVERAGE_VALUE_BI_ZHI_CHA");
        public final static Property DuanSheOne = new Property(6, String.class, "duanSheOne", false, "DUAN_SHE_ONE");
        public final static Property DuanSheTwo = new Property(7, String.class, "duanSheTwo", false, "DUAN_SHE_TWO");
        public final static Property DuanSheThree = new Property(8, String.class, "duanSheThree", false, "DUAN_SHE_THREE");
        public final static Property DuanSheFour = new Property(9, String.class, "duanSheFour", false, "DUAN_SHE_FOUR");
        public final static Property DuanSheFive = new Property(10, String.class, "duanSheFive", false, "DUAN_SHE_FIVE");
        public final static Property DuanSheSix = new Property(11, String.class, "duanSheSix", false, "DUAN_SHE_SIX");
        public final static Property DuanShePicOne = new Property(12, String.class, "duanShePicOne", false, "DUAN_SHE_PIC_ONE");
        public final static Property DuanShePicTwo = new Property(13, String.class, "duanShePicTwo", false, "DUAN_SHE_PIC_TWO");
        public final static Property DuanShePicThree = new Property(14, String.class, "duanShePicThree", false, "DUAN_SHE_PIC_THREE");
        public final static Property DuanShePicFour = new Property(15, String.class, "duanShePicFour", false, "DUAN_SHE_PIC_FOUR");
        public final static Property DuanShePicFive = new Property(16, String.class, "duanShePicFive", false, "DUAN_SHE_PIC_FIVE");
        public final static Property DuanShePicSix = new Property(17, String.class, "duanShePicSix", false, "DUAN_SHE_PIC_SIX");
    }

    private DaoSession daoSession;


    public Step8ResbeanDao(DaoConfig config) {
        super(config);
    }
    
    public Step8ResbeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"STEP8_RESBEAN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: step8Id
                "\"CURRENT_STEP_IS_CHECKED\" INTEGER NOT NULL ," + // 1: currentStepIsChecked
                "\"MIN_AVERAGE_VALUE\" TEXT," + // 2: minAverageValue
                "\"MAX_AVERAGE_VALUE\" TEXT," + // 3: maxAverageValue
                "\"AVERAGE_VALUE_ZHI_CHA\" TEXT," + // 4: averageValueZhiCha
                "\"AVERAGE_VALUE_BI_ZHI_CHA\" TEXT," + // 5: averageValueBiZhiCha
                "\"DUAN_SHE_ONE\" TEXT," + // 6: duanSheOne
                "\"DUAN_SHE_TWO\" TEXT," + // 7: duanSheTwo
                "\"DUAN_SHE_THREE\" TEXT," + // 8: duanSheThree
                "\"DUAN_SHE_FOUR\" TEXT," + // 9: duanSheFour
                "\"DUAN_SHE_FIVE\" TEXT," + // 10: duanSheFive
                "\"DUAN_SHE_SIX\" TEXT," + // 11: duanSheSix
                "\"DUAN_SHE_PIC_ONE\" TEXT," + // 12: duanShePicOne
                "\"DUAN_SHE_PIC_TWO\" TEXT," + // 13: duanShePicTwo
                "\"DUAN_SHE_PIC_THREE\" TEXT," + // 14: duanShePicThree
                "\"DUAN_SHE_PIC_FOUR\" TEXT," + // 15: duanShePicFour
                "\"DUAN_SHE_PIC_FIVE\" TEXT," + // 16: duanShePicFive
                "\"DUAN_SHE_PIC_SIX\" TEXT);"); // 17: duanShePicSix
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"STEP8_RESBEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Step8Resbean entity) {
        stmt.clearBindings();
 
        Long step8Id = entity.getStep8Id();
        if (step8Id != null) {
            stmt.bindLong(1, step8Id);
        }
        stmt.bindLong(2, entity.getCurrentStepIsChecked() ? 1L: 0L);
 
        String minAverageValue = entity.getMinAverageValue();
        if (minAverageValue != null) {
            stmt.bindString(3, minAverageValue);
        }
 
        String maxAverageValue = entity.getMaxAverageValue();
        if (maxAverageValue != null) {
            stmt.bindString(4, maxAverageValue);
        }
 
        String averageValueZhiCha = entity.getAverageValueZhiCha();
        if (averageValueZhiCha != null) {
            stmt.bindString(5, averageValueZhiCha);
        }
 
        String averageValueBiZhiCha = entity.getAverageValueBiZhiCha();
        if (averageValueBiZhiCha != null) {
            stmt.bindString(6, averageValueBiZhiCha);
        }
 
        String duanSheOne = entity.getDuanSheOne();
        if (duanSheOne != null) {
            stmt.bindString(7, duanSheOne);
        }
 
        String duanSheTwo = entity.getDuanSheTwo();
        if (duanSheTwo != null) {
            stmt.bindString(8, duanSheTwo);
        }
 
        String duanSheThree = entity.getDuanSheThree();
        if (duanSheThree != null) {
            stmt.bindString(9, duanSheThree);
        }
 
        String duanSheFour = entity.getDuanSheFour();
        if (duanSheFour != null) {
            stmt.bindString(10, duanSheFour);
        }
 
        String duanSheFive = entity.getDuanSheFive();
        if (duanSheFive != null) {
            stmt.bindString(11, duanSheFive);
        }
 
        String duanSheSix = entity.getDuanSheSix();
        if (duanSheSix != null) {
            stmt.bindString(12, duanSheSix);
        }
 
        String duanShePicOne = entity.getDuanShePicOne();
        if (duanShePicOne != null) {
            stmt.bindString(13, duanShePicOne);
        }
 
        String duanShePicTwo = entity.getDuanShePicTwo();
        if (duanShePicTwo != null) {
            stmt.bindString(14, duanShePicTwo);
        }
 
        String duanShePicThree = entity.getDuanShePicThree();
        if (duanShePicThree != null) {
            stmt.bindString(15, duanShePicThree);
        }
 
        String duanShePicFour = entity.getDuanShePicFour();
        if (duanShePicFour != null) {
            stmt.bindString(16, duanShePicFour);
        }
 
        String duanShePicFive = entity.getDuanShePicFive();
        if (duanShePicFive != null) {
            stmt.bindString(17, duanShePicFive);
        }
 
        String duanShePicSix = entity.getDuanShePicSix();
        if (duanShePicSix != null) {
            stmt.bindString(18, duanShePicSix);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Step8Resbean entity) {
        stmt.clearBindings();
 
        Long step8Id = entity.getStep8Id();
        if (step8Id != null) {
            stmt.bindLong(1, step8Id);
        }
        stmt.bindLong(2, entity.getCurrentStepIsChecked() ? 1L: 0L);
 
        String minAverageValue = entity.getMinAverageValue();
        if (minAverageValue != null) {
            stmt.bindString(3, minAverageValue);
        }
 
        String maxAverageValue = entity.getMaxAverageValue();
        if (maxAverageValue != null) {
            stmt.bindString(4, maxAverageValue);
        }
 
        String averageValueZhiCha = entity.getAverageValueZhiCha();
        if (averageValueZhiCha != null) {
            stmt.bindString(5, averageValueZhiCha);
        }
 
        String averageValueBiZhiCha = entity.getAverageValueBiZhiCha();
        if (averageValueBiZhiCha != null) {
            stmt.bindString(6, averageValueBiZhiCha);
        }
 
        String duanSheOne = entity.getDuanSheOne();
        if (duanSheOne != null) {
            stmt.bindString(7, duanSheOne);
        }
 
        String duanSheTwo = entity.getDuanSheTwo();
        if (duanSheTwo != null) {
            stmt.bindString(8, duanSheTwo);
        }
 
        String duanSheThree = entity.getDuanSheThree();
        if (duanSheThree != null) {
            stmt.bindString(9, duanSheThree);
        }
 
        String duanSheFour = entity.getDuanSheFour();
        if (duanSheFour != null) {
            stmt.bindString(10, duanSheFour);
        }
 
        String duanSheFive = entity.getDuanSheFive();
        if (duanSheFive != null) {
            stmt.bindString(11, duanSheFive);
        }
 
        String duanSheSix = entity.getDuanSheSix();
        if (duanSheSix != null) {
            stmt.bindString(12, duanSheSix);
        }
 
        String duanShePicOne = entity.getDuanShePicOne();
        if (duanShePicOne != null) {
            stmt.bindString(13, duanShePicOne);
        }
 
        String duanShePicTwo = entity.getDuanShePicTwo();
        if (duanShePicTwo != null) {
            stmt.bindString(14, duanShePicTwo);
        }
 
        String duanShePicThree = entity.getDuanShePicThree();
        if (duanShePicThree != null) {
            stmt.bindString(15, duanShePicThree);
        }
 
        String duanShePicFour = entity.getDuanShePicFour();
        if (duanShePicFour != null) {
            stmt.bindString(16, duanShePicFour);
        }
 
        String duanShePicFive = entity.getDuanShePicFive();
        if (duanShePicFive != null) {
            stmt.bindString(17, duanShePicFive);
        }
 
        String duanShePicSix = entity.getDuanShePicSix();
        if (duanShePicSix != null) {
            stmt.bindString(18, duanShePicSix);
        }
    }

    @Override
    protected final void attachEntity(Step8Resbean entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Step8Resbean readEntity(Cursor cursor, int offset) {
        Step8Resbean entity = new Step8Resbean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // step8Id
            cursor.getShort(offset + 1) != 0, // currentStepIsChecked
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // minAverageValue
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // maxAverageValue
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // averageValueZhiCha
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // averageValueBiZhiCha
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // duanSheOne
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // duanSheTwo
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // duanSheThree
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // duanSheFour
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // duanSheFive
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // duanSheSix
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // duanShePicOne
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // duanShePicTwo
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // duanShePicThree
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // duanShePicFour
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // duanShePicFive
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17) // duanShePicSix
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Step8Resbean entity, int offset) {
        entity.setStep8Id(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setCurrentStepIsChecked(cursor.getShort(offset + 1) != 0);
        entity.setMinAverageValue(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMaxAverageValue(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setAverageValueZhiCha(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setAverageValueBiZhiCha(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setDuanSheOne(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setDuanSheTwo(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setDuanSheThree(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setDuanSheFour(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setDuanSheFive(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setDuanSheSix(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setDuanShePicOne(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setDuanShePicTwo(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setDuanShePicThree(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setDuanShePicFour(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setDuanShePicFive(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setDuanShePicSix(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Step8Resbean entity, long rowId) {
        entity.setStep8Id(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Step8Resbean entity) {
        if(entity != null) {
            return entity.getStep8Id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Step8Resbean entity) {
        return entity.getStep8Id() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
