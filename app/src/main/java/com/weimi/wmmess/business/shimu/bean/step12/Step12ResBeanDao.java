package com.weimi.wmmess.business.shimu.bean.step12;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.weimi.wmmess.business.shimu.bean.DaoSession;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "STEP12_RES_BEAN".
*/
public class Step12ResBeanDao extends AbstractDao<Step12ResBean, Long> {

    public static final String TABLENAME = "STEP12_RES_BEAN";

    /**
     * Properties of entity Step12ResBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Step12Id = new Property(0, Long.class, "step12Id", true, "_id");
        public final static Property CurrentStepIsChecked = new Property(1, boolean.class, "currentStepIsChecked", false, "CURRENT_STEP_IS_CHECKED");
        public final static Property AddZero = new Property(2, String.class, "addZero", false, "ADD_ZERO");
        public final static Property AddOne = new Property(3, String.class, "addOne", false, "ADD_ONE");
        public final static Property AddTwo = new Property(4, String.class, "addTwo", false, "ADD_TWO");
        public final static Property AddThree = new Property(5, String.class, "addThree", false, "ADD_THREE");
        public final static Property AddFour = new Property(6, String.class, "addFour", false, "ADD_FOUR");
        public final static Property AddFive = new Property(7, String.class, "addFive", false, "ADD_FIVE");
        public final static Property AddHopperOne = new Property(8, String.class, "addHopperOne", false, "ADD_HOPPER_ONE");
        public final static Property AddHopperTwo = new Property(9, String.class, "addHopperTwo", false, "ADD_HOPPER_TWO");
        public final static Property AddOutSide = new Property(10, String.class, "addOutSide", false, "ADD_OUT_SIDE");
        public final static Property AddSize = new Property(11, String.class, "addSize", false, "ADD_SIZE");
        public final static Property AddZhiLiangOne = new Property(12, String.class, "addZhiLiangOne", false, "ADD_ZHI_LIANG_ONE");
        public final static Property AddZhiLiangTwo = new Property(13, String.class, "addZhiLiangTwo", false, "ADD_ZHI_LIANG_TWO");
        public final static Property SubtractZero = new Property(14, String.class, "subtractZero", false, "SUBTRACT_ZERO");
        public final static Property SubtractOne = new Property(15, String.class, "subtractOne", false, "SUBTRACT_ONE");
        public final static Property SubtractTwo = new Property(16, String.class, "subtractTwo", false, "SUBTRACT_TWO");
        public final static Property SubtractThree = new Property(17, String.class, "subtractThree", false, "SUBTRACT_THREE");
        public final static Property SubtractFour = new Property(18, String.class, "subtractFour", false, "SUBTRACT_FOUR");
        public final static Property SubtractFive = new Property(19, String.class, "subtractFive", false, "SUBTRACT_FIVE");
        public final static Property SubtractHopperOne = new Property(20, String.class, "subtractHopperOne", false, "SUBTRACT_HOPPER_ONE");
        public final static Property SubtractHopperTwo = new Property(21, String.class, "subtractHopperTwo", false, "SUBTRACT_HOPPER_TWO");
        public final static Property SubtractOutside = new Property(22, String.class, "subtractOutside", false, "SUBTRACT_OUTSIDE");
        public final static Property SubtractSize = new Property(23, String.class, "subtractSize", false, "SUBTRACT_SIZE");
        public final static Property SubtractZhiLiangOne = new Property(24, String.class, "subtractZhiLiangOne", false, "SUBTRACT_ZHI_LIANG_ONE");
        public final static Property SubtractZhiLiangTwo = new Property(25, String.class, "subtractZhiLiangTwo", false, "SUBTRACT_ZHI_LIANG_TWO");
        public final static Property AddWendu = new Property(26, String.class, "addWendu", false, "ADD_WENDU");
        public final static Property MuJuAddWaiGuan = new Property(27, String.class, "muJuAddWaiGuan", false, "MU_JU_ADD_WAI_GUAN");
        public final static Property MuJuAddChiCun = new Property(28, String.class, "muJuAddChiCun", false, "MU_JU_ADD_CHI_CUN");
        public final static Property MuJuAddZhiLiang = new Property(29, String.class, "muJuAddZhiLiang", false, "MU_JU_ADD_ZHI_LIANG");
        public final static Property SubtractWenDu = new Property(30, String.class, "subtractWenDu", false, "SUBTRACT_WEN_DU");
        public final static Property MuJuSubtractWaiGuan = new Property(31, String.class, "muJuSubtractWaiGuan", false, "MU_JU_SUBTRACT_WAI_GUAN");
        public final static Property MuJuSubtractChiCun = new Property(32, String.class, "muJuSubtractChiCun", false, "MU_JU_SUBTRACT_CHI_CUN");
        public final static Property MuJuSubtractZhiLiang = new Property(33, String.class, "muJuSubtractZhiLiang", false, "MU_JU_SUBTRACT_ZHI_LIANG");
    }


    public Step12ResBeanDao(DaoConfig config) {
        super(config);
    }
    
    public Step12ResBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"STEP12_RES_BEAN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: step12Id
                "\"CURRENT_STEP_IS_CHECKED\" INTEGER NOT NULL ," + // 1: currentStepIsChecked
                "\"ADD_ZERO\" TEXT," + // 2: addZero
                "\"ADD_ONE\" TEXT," + // 3: addOne
                "\"ADD_TWO\" TEXT," + // 4: addTwo
                "\"ADD_THREE\" TEXT," + // 5: addThree
                "\"ADD_FOUR\" TEXT," + // 6: addFour
                "\"ADD_FIVE\" TEXT," + // 7: addFive
                "\"ADD_HOPPER_ONE\" TEXT," + // 8: addHopperOne
                "\"ADD_HOPPER_TWO\" TEXT," + // 9: addHopperTwo
                "\"ADD_OUT_SIDE\" TEXT," + // 10: addOutSide
                "\"ADD_SIZE\" TEXT," + // 11: addSize
                "\"ADD_ZHI_LIANG_ONE\" TEXT," + // 12: addZhiLiangOne
                "\"ADD_ZHI_LIANG_TWO\" TEXT," + // 13: addZhiLiangTwo
                "\"SUBTRACT_ZERO\" TEXT," + // 14: subtractZero
                "\"SUBTRACT_ONE\" TEXT," + // 15: subtractOne
                "\"SUBTRACT_TWO\" TEXT," + // 16: subtractTwo
                "\"SUBTRACT_THREE\" TEXT," + // 17: subtractThree
                "\"SUBTRACT_FOUR\" TEXT," + // 18: subtractFour
                "\"SUBTRACT_FIVE\" TEXT," + // 19: subtractFive
                "\"SUBTRACT_HOPPER_ONE\" TEXT," + // 20: subtractHopperOne
                "\"SUBTRACT_HOPPER_TWO\" TEXT," + // 21: subtractHopperTwo
                "\"SUBTRACT_OUTSIDE\" TEXT," + // 22: subtractOutside
                "\"SUBTRACT_SIZE\" TEXT," + // 23: subtractSize
                "\"SUBTRACT_ZHI_LIANG_ONE\" TEXT," + // 24: subtractZhiLiangOne
                "\"SUBTRACT_ZHI_LIANG_TWO\" TEXT," + // 25: subtractZhiLiangTwo
                "\"ADD_WENDU\" TEXT," + // 26: addWendu
                "\"MU_JU_ADD_WAI_GUAN\" TEXT," + // 27: muJuAddWaiGuan
                "\"MU_JU_ADD_CHI_CUN\" TEXT," + // 28: muJuAddChiCun
                "\"MU_JU_ADD_ZHI_LIANG\" TEXT," + // 29: muJuAddZhiLiang
                "\"SUBTRACT_WEN_DU\" TEXT," + // 30: subtractWenDu
                "\"MU_JU_SUBTRACT_WAI_GUAN\" TEXT," + // 31: muJuSubtractWaiGuan
                "\"MU_JU_SUBTRACT_CHI_CUN\" TEXT," + // 32: muJuSubtractChiCun
                "\"MU_JU_SUBTRACT_ZHI_LIANG\" TEXT);"); // 33: muJuSubtractZhiLiang
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"STEP12_RES_BEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Step12ResBean entity) {
        stmt.clearBindings();
 
        Long step12Id = entity.getStep12Id();
        if (step12Id != null) {
            stmt.bindLong(1, step12Id);
        }
        stmt.bindLong(2, entity.getCurrentStepIsChecked() ? 1L: 0L);
 
        String addZero = entity.getAddZero();
        if (addZero != null) {
            stmt.bindString(3, addZero);
        }
 
        String addOne = entity.getAddOne();
        if (addOne != null) {
            stmt.bindString(4, addOne);
        }
 
        String addTwo = entity.getAddTwo();
        if (addTwo != null) {
            stmt.bindString(5, addTwo);
        }
 
        String addThree = entity.getAddThree();
        if (addThree != null) {
            stmt.bindString(6, addThree);
        }
 
        String addFour = entity.getAddFour();
        if (addFour != null) {
            stmt.bindString(7, addFour);
        }
 
        String addFive = entity.getAddFive();
        if (addFive != null) {
            stmt.bindString(8, addFive);
        }
 
        String addHopperOne = entity.getAddHopperOne();
        if (addHopperOne != null) {
            stmt.bindString(9, addHopperOne);
        }
 
        String addHopperTwo = entity.getAddHopperTwo();
        if (addHopperTwo != null) {
            stmt.bindString(10, addHopperTwo);
        }
 
        String addOutSide = entity.getAddOutSide();
        if (addOutSide != null) {
            stmt.bindString(11, addOutSide);
        }
 
        String addSize = entity.getAddSize();
        if (addSize != null) {
            stmt.bindString(12, addSize);
        }
 
        String addZhiLiangOne = entity.getAddZhiLiangOne();
        if (addZhiLiangOne != null) {
            stmt.bindString(13, addZhiLiangOne);
        }
 
        String addZhiLiangTwo = entity.getAddZhiLiangTwo();
        if (addZhiLiangTwo != null) {
            stmt.bindString(14, addZhiLiangTwo);
        }
 
        String subtractZero = entity.getSubtractZero();
        if (subtractZero != null) {
            stmt.bindString(15, subtractZero);
        }
 
        String subtractOne = entity.getSubtractOne();
        if (subtractOne != null) {
            stmt.bindString(16, subtractOne);
        }
 
        String subtractTwo = entity.getSubtractTwo();
        if (subtractTwo != null) {
            stmt.bindString(17, subtractTwo);
        }
 
        String subtractThree = entity.getSubtractThree();
        if (subtractThree != null) {
            stmt.bindString(18, subtractThree);
        }
 
        String subtractFour = entity.getSubtractFour();
        if (subtractFour != null) {
            stmt.bindString(19, subtractFour);
        }
 
        String subtractFive = entity.getSubtractFive();
        if (subtractFive != null) {
            stmt.bindString(20, subtractFive);
        }
 
        String subtractHopperOne = entity.getSubtractHopperOne();
        if (subtractHopperOne != null) {
            stmt.bindString(21, subtractHopperOne);
        }
 
        String subtractHopperTwo = entity.getSubtractHopperTwo();
        if (subtractHopperTwo != null) {
            stmt.bindString(22, subtractHopperTwo);
        }
 
        String subtractOutside = entity.getSubtractOutside();
        if (subtractOutside != null) {
            stmt.bindString(23, subtractOutside);
        }
 
        String subtractSize = entity.getSubtractSize();
        if (subtractSize != null) {
            stmt.bindString(24, subtractSize);
        }
 
        String subtractZhiLiangOne = entity.getSubtractZhiLiangOne();
        if (subtractZhiLiangOne != null) {
            stmt.bindString(25, subtractZhiLiangOne);
        }
 
        String subtractZhiLiangTwo = entity.getSubtractZhiLiangTwo();
        if (subtractZhiLiangTwo != null) {
            stmt.bindString(26, subtractZhiLiangTwo);
        }
 
        String addWendu = entity.getAddWendu();
        if (addWendu != null) {
            stmt.bindString(27, addWendu);
        }
 
        String muJuAddWaiGuan = entity.getMuJuAddWaiGuan();
        if (muJuAddWaiGuan != null) {
            stmt.bindString(28, muJuAddWaiGuan);
        }
 
        String muJuAddChiCun = entity.getMuJuAddChiCun();
        if (muJuAddChiCun != null) {
            stmt.bindString(29, muJuAddChiCun);
        }
 
        String muJuAddZhiLiang = entity.getMuJuAddZhiLiang();
        if (muJuAddZhiLiang != null) {
            stmt.bindString(30, muJuAddZhiLiang);
        }
 
        String subtractWenDu = entity.getSubtractWenDu();
        if (subtractWenDu != null) {
            stmt.bindString(31, subtractWenDu);
        }
 
        String muJuSubtractWaiGuan = entity.getMuJuSubtractWaiGuan();
        if (muJuSubtractWaiGuan != null) {
            stmt.bindString(32, muJuSubtractWaiGuan);
        }
 
        String muJuSubtractChiCun = entity.getMuJuSubtractChiCun();
        if (muJuSubtractChiCun != null) {
            stmt.bindString(33, muJuSubtractChiCun);
        }
 
        String muJuSubtractZhiLiang = entity.getMuJuSubtractZhiLiang();
        if (muJuSubtractZhiLiang != null) {
            stmt.bindString(34, muJuSubtractZhiLiang);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Step12ResBean entity) {
        stmt.clearBindings();
 
        Long step12Id = entity.getStep12Id();
        if (step12Id != null) {
            stmt.bindLong(1, step12Id);
        }
        stmt.bindLong(2, entity.getCurrentStepIsChecked() ? 1L: 0L);
 
        String addZero = entity.getAddZero();
        if (addZero != null) {
            stmt.bindString(3, addZero);
        }
 
        String addOne = entity.getAddOne();
        if (addOne != null) {
            stmt.bindString(4, addOne);
        }
 
        String addTwo = entity.getAddTwo();
        if (addTwo != null) {
            stmt.bindString(5, addTwo);
        }
 
        String addThree = entity.getAddThree();
        if (addThree != null) {
            stmt.bindString(6, addThree);
        }
 
        String addFour = entity.getAddFour();
        if (addFour != null) {
            stmt.bindString(7, addFour);
        }
 
        String addFive = entity.getAddFive();
        if (addFive != null) {
            stmt.bindString(8, addFive);
        }
 
        String addHopperOne = entity.getAddHopperOne();
        if (addHopperOne != null) {
            stmt.bindString(9, addHopperOne);
        }
 
        String addHopperTwo = entity.getAddHopperTwo();
        if (addHopperTwo != null) {
            stmt.bindString(10, addHopperTwo);
        }
 
        String addOutSide = entity.getAddOutSide();
        if (addOutSide != null) {
            stmt.bindString(11, addOutSide);
        }
 
        String addSize = entity.getAddSize();
        if (addSize != null) {
            stmt.bindString(12, addSize);
        }
 
        String addZhiLiangOne = entity.getAddZhiLiangOne();
        if (addZhiLiangOne != null) {
            stmt.bindString(13, addZhiLiangOne);
        }
 
        String addZhiLiangTwo = entity.getAddZhiLiangTwo();
        if (addZhiLiangTwo != null) {
            stmt.bindString(14, addZhiLiangTwo);
        }
 
        String subtractZero = entity.getSubtractZero();
        if (subtractZero != null) {
            stmt.bindString(15, subtractZero);
        }
 
        String subtractOne = entity.getSubtractOne();
        if (subtractOne != null) {
            stmt.bindString(16, subtractOne);
        }
 
        String subtractTwo = entity.getSubtractTwo();
        if (subtractTwo != null) {
            stmt.bindString(17, subtractTwo);
        }
 
        String subtractThree = entity.getSubtractThree();
        if (subtractThree != null) {
            stmt.bindString(18, subtractThree);
        }
 
        String subtractFour = entity.getSubtractFour();
        if (subtractFour != null) {
            stmt.bindString(19, subtractFour);
        }
 
        String subtractFive = entity.getSubtractFive();
        if (subtractFive != null) {
            stmt.bindString(20, subtractFive);
        }
 
        String subtractHopperOne = entity.getSubtractHopperOne();
        if (subtractHopperOne != null) {
            stmt.bindString(21, subtractHopperOne);
        }
 
        String subtractHopperTwo = entity.getSubtractHopperTwo();
        if (subtractHopperTwo != null) {
            stmt.bindString(22, subtractHopperTwo);
        }
 
        String subtractOutside = entity.getSubtractOutside();
        if (subtractOutside != null) {
            stmt.bindString(23, subtractOutside);
        }
 
        String subtractSize = entity.getSubtractSize();
        if (subtractSize != null) {
            stmt.bindString(24, subtractSize);
        }
 
        String subtractZhiLiangOne = entity.getSubtractZhiLiangOne();
        if (subtractZhiLiangOne != null) {
            stmt.bindString(25, subtractZhiLiangOne);
        }
 
        String subtractZhiLiangTwo = entity.getSubtractZhiLiangTwo();
        if (subtractZhiLiangTwo != null) {
            stmt.bindString(26, subtractZhiLiangTwo);
        }
 
        String addWendu = entity.getAddWendu();
        if (addWendu != null) {
            stmt.bindString(27, addWendu);
        }
 
        String muJuAddWaiGuan = entity.getMuJuAddWaiGuan();
        if (muJuAddWaiGuan != null) {
            stmt.bindString(28, muJuAddWaiGuan);
        }
 
        String muJuAddChiCun = entity.getMuJuAddChiCun();
        if (muJuAddChiCun != null) {
            stmt.bindString(29, muJuAddChiCun);
        }
 
        String muJuAddZhiLiang = entity.getMuJuAddZhiLiang();
        if (muJuAddZhiLiang != null) {
            stmt.bindString(30, muJuAddZhiLiang);
        }
 
        String subtractWenDu = entity.getSubtractWenDu();
        if (subtractWenDu != null) {
            stmt.bindString(31, subtractWenDu);
        }
 
        String muJuSubtractWaiGuan = entity.getMuJuSubtractWaiGuan();
        if (muJuSubtractWaiGuan != null) {
            stmt.bindString(32, muJuSubtractWaiGuan);
        }
 
        String muJuSubtractChiCun = entity.getMuJuSubtractChiCun();
        if (muJuSubtractChiCun != null) {
            stmt.bindString(33, muJuSubtractChiCun);
        }
 
        String muJuSubtractZhiLiang = entity.getMuJuSubtractZhiLiang();
        if (muJuSubtractZhiLiang != null) {
            stmt.bindString(34, muJuSubtractZhiLiang);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Step12ResBean readEntity(Cursor cursor, int offset) {
        Step12ResBean entity = new Step12ResBean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // step12Id
            cursor.getShort(offset + 1) != 0, // currentStepIsChecked
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // addZero
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // addOne
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // addTwo
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // addThree
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // addFour
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // addFive
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // addHopperOne
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // addHopperTwo
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // addOutSide
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // addSize
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // addZhiLiangOne
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // addZhiLiangTwo
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // subtractZero
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // subtractOne
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // subtractTwo
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // subtractThree
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // subtractFour
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // subtractFive
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // subtractHopperOne
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // subtractHopperTwo
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // subtractOutside
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // subtractSize
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // subtractZhiLiangOne
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // subtractZhiLiangTwo
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // addWendu
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // muJuAddWaiGuan
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // muJuAddChiCun
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // muJuAddZhiLiang
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // subtractWenDu
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // muJuSubtractWaiGuan
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // muJuSubtractChiCun
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33) // muJuSubtractZhiLiang
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Step12ResBean entity, int offset) {
        entity.setStep12Id(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setCurrentStepIsChecked(cursor.getShort(offset + 1) != 0);
        entity.setAddZero(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setAddOne(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setAddTwo(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setAddThree(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setAddFour(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setAddFive(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setAddHopperOne(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setAddHopperTwo(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setAddOutSide(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setAddSize(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setAddZhiLiangOne(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setAddZhiLiangTwo(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setSubtractZero(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setSubtractOne(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setSubtractTwo(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setSubtractThree(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setSubtractFour(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setSubtractFive(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setSubtractHopperOne(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setSubtractHopperTwo(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setSubtractOutside(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setSubtractSize(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setSubtractZhiLiangOne(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setSubtractZhiLiangTwo(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setAddWendu(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setMuJuAddWaiGuan(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setMuJuAddChiCun(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setMuJuAddZhiLiang(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setSubtractWenDu(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setMuJuSubtractWaiGuan(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setMuJuSubtractChiCun(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setMuJuSubtractZhiLiang(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Step12ResBean entity, long rowId) {
        entity.setStep12Id(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Step12ResBean entity) {
        if(entity != null) {
            return entity.getStep12Id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Step12ResBean entity) {
        return entity.getStep12Id() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
