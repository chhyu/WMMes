package com.weimi.wmmess.business.shimu.bean.step4;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.weimi.wmmess.business.shimu.bean.DaoSession;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "STEP4_RESBEAN".
*/
public class Step4ResbeanDao extends AbstractDao<Step4Resbean, Long> {

    public static final String TABLENAME = "STEP4_RESBEAN";

    /**
     * Properties of entity Step4Resbean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Step4Id = new Property(0, Long.class, "step4Id", true, "_id");
        public final static Property CurrentStepIsChecked = new Property(1, boolean.class, "currentStepIsChecked", false, "CURRENT_STEP_IS_CHECKED");
        public final static Property Penzui = new Property(2, String.class, "penzui", false, "PENZUI");
        public final static Property One = new Property(3, String.class, "one", false, "ONE");
        public final static Property Two = new Property(4, String.class, "two", false, "TWO");
        public final static Property Three = new Property(5, String.class, "three", false, "THREE");
        public final static Property Four = new Property(6, String.class, "four", false, "FOUR");
        public final static Property Five = new Property(7, String.class, "five", false, "FIVE");
        public final static Property XiaLiaoKou = new Property(8, String.class, "xiaLiaoKou", false, "XIA_LIAO_KOU");
        public final static Property CheckTemp = new Property(9, String.class, "checkTemp", false, "CHECK_TEMP");
        public final static Property DingMoSheDing = new Property(10, String.class, "dingMoSheDing", false, "DING_MO_SHE_DING");
        public final static Property DongMoSheDing = new Property(11, String.class, "dongMoSheDing", false, "DONG_MO_SHE_DING");
        public final static Property HuaKuaiSheDing = new Property(12, String.class, "huaKuaiSheDing", false, "HUA_KUAI_SHE_DING");
        public final static Property DingMoShiJi = new Property(13, String.class, "dingMoShiJi", false, "DING_MO_SHI_JI");
        public final static Property DongMoShiJi = new Property(14, String.class, "dongMoShiJi", false, "DONG_MO_SHI_JI");
        public final static Property HuaKuaiShiJi = new Property(15, String.class, "huaKuaiShiJi", false, "HUA_KUAI_SHI_JI");
        public final static Property LuoGanZhiJing = new Property(16, double.class, "luoGanZhiJing", false, "LUO_GAN_ZHI_JING");
        public final static Property YuanLiao = new Property(17, double.class, "yuanLiao", false, "YUAN_LIAO");
        public final static Property LuoGanZhuanSu = new Property(18, double.class, "luoGanZhuanSu", false, "LUO_GAN_ZHUAN_SU");
        public final static Property ZhuanFenZhong = new Property(19, double.class, "zhuanFenZhong", false, "ZHUAN_FEN_ZHONG");
    }

    private DaoSession daoSession;


    public Step4ResbeanDao(DaoConfig config) {
        super(config);
    }
    
    public Step4ResbeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"STEP4_RESBEAN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: step4Id
                "\"CURRENT_STEP_IS_CHECKED\" INTEGER NOT NULL ," + // 1: currentStepIsChecked
                "\"PENZUI\" TEXT," + // 2: penzui
                "\"ONE\" TEXT," + // 3: one
                "\"TWO\" TEXT," + // 4: two
                "\"THREE\" TEXT," + // 5: three
                "\"FOUR\" TEXT," + // 6: four
                "\"FIVE\" TEXT," + // 7: five
                "\"XIA_LIAO_KOU\" TEXT," + // 8: xiaLiaoKou
                "\"CHECK_TEMP\" TEXT," + // 9: checkTemp
                "\"DING_MO_SHE_DING\" TEXT," + // 10: dingMoSheDing
                "\"DONG_MO_SHE_DING\" TEXT," + // 11: dongMoSheDing
                "\"HUA_KUAI_SHE_DING\" TEXT," + // 12: huaKuaiSheDing
                "\"DING_MO_SHI_JI\" TEXT," + // 13: dingMoShiJi
                "\"DONG_MO_SHI_JI\" TEXT," + // 14: dongMoShiJi
                "\"HUA_KUAI_SHI_JI\" TEXT," + // 15: huaKuaiShiJi
                "\"LUO_GAN_ZHI_JING\" REAL NOT NULL ," + // 16: luoGanZhiJing
                "\"YUAN_LIAO\" REAL NOT NULL ," + // 17: yuanLiao
                "\"LUO_GAN_ZHUAN_SU\" REAL NOT NULL ," + // 18: luoGanZhuanSu
                "\"ZHUAN_FEN_ZHONG\" REAL NOT NULL );"); // 19: zhuanFenZhong
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"STEP4_RESBEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Step4Resbean entity) {
        stmt.clearBindings();
 
        Long step4Id = entity.getStep4Id();
        if (step4Id != null) {
            stmt.bindLong(1, step4Id);
        }
        stmt.bindLong(2, entity.getCurrentStepIsChecked() ? 1L: 0L);
 
        String penzui = entity.getPenzui();
        if (penzui != null) {
            stmt.bindString(3, penzui);
        }
 
        String one = entity.getOne();
        if (one != null) {
            stmt.bindString(4, one);
        }
 
        String two = entity.getTwo();
        if (two != null) {
            stmt.bindString(5, two);
        }
 
        String three = entity.getThree();
        if (three != null) {
            stmt.bindString(6, three);
        }
 
        String four = entity.getFour();
        if (four != null) {
            stmt.bindString(7, four);
        }
 
        String five = entity.getFive();
        if (five != null) {
            stmt.bindString(8, five);
        }
 
        String xiaLiaoKou = entity.getXiaLiaoKou();
        if (xiaLiaoKou != null) {
            stmt.bindString(9, xiaLiaoKou);
        }
 
        String checkTemp = entity.getCheckTemp();
        if (checkTemp != null) {
            stmt.bindString(10, checkTemp);
        }
 
        String dingMoSheDing = entity.getDingMoSheDing();
        if (dingMoSheDing != null) {
            stmt.bindString(11, dingMoSheDing);
        }
 
        String dongMoSheDing = entity.getDongMoSheDing();
        if (dongMoSheDing != null) {
            stmt.bindString(12, dongMoSheDing);
        }
 
        String huaKuaiSheDing = entity.getHuaKuaiSheDing();
        if (huaKuaiSheDing != null) {
            stmt.bindString(13, huaKuaiSheDing);
        }
 
        String dingMoShiJi = entity.getDingMoShiJi();
        if (dingMoShiJi != null) {
            stmt.bindString(14, dingMoShiJi);
        }
 
        String dongMoShiJi = entity.getDongMoShiJi();
        if (dongMoShiJi != null) {
            stmt.bindString(15, dongMoShiJi);
        }
 
        String huaKuaiShiJi = entity.getHuaKuaiShiJi();
        if (huaKuaiShiJi != null) {
            stmt.bindString(16, huaKuaiShiJi);
        }
        stmt.bindDouble(17, entity.getLuoGanZhiJing());
        stmt.bindDouble(18, entity.getYuanLiao());
        stmt.bindDouble(19, entity.getLuoGanZhuanSu());
        stmt.bindDouble(20, entity.getZhuanFenZhong());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Step4Resbean entity) {
        stmt.clearBindings();
 
        Long step4Id = entity.getStep4Id();
        if (step4Id != null) {
            stmt.bindLong(1, step4Id);
        }
        stmt.bindLong(2, entity.getCurrentStepIsChecked() ? 1L: 0L);
 
        String penzui = entity.getPenzui();
        if (penzui != null) {
            stmt.bindString(3, penzui);
        }
 
        String one = entity.getOne();
        if (one != null) {
            stmt.bindString(4, one);
        }
 
        String two = entity.getTwo();
        if (two != null) {
            stmt.bindString(5, two);
        }
 
        String three = entity.getThree();
        if (three != null) {
            stmt.bindString(6, three);
        }
 
        String four = entity.getFour();
        if (four != null) {
            stmt.bindString(7, four);
        }
 
        String five = entity.getFive();
        if (five != null) {
            stmt.bindString(8, five);
        }
 
        String xiaLiaoKou = entity.getXiaLiaoKou();
        if (xiaLiaoKou != null) {
            stmt.bindString(9, xiaLiaoKou);
        }
 
        String checkTemp = entity.getCheckTemp();
        if (checkTemp != null) {
            stmt.bindString(10, checkTemp);
        }
 
        String dingMoSheDing = entity.getDingMoSheDing();
        if (dingMoSheDing != null) {
            stmt.bindString(11, dingMoSheDing);
        }
 
        String dongMoSheDing = entity.getDongMoSheDing();
        if (dongMoSheDing != null) {
            stmt.bindString(12, dongMoSheDing);
        }
 
        String huaKuaiSheDing = entity.getHuaKuaiSheDing();
        if (huaKuaiSheDing != null) {
            stmt.bindString(13, huaKuaiSheDing);
        }
 
        String dingMoShiJi = entity.getDingMoShiJi();
        if (dingMoShiJi != null) {
            stmt.bindString(14, dingMoShiJi);
        }
 
        String dongMoShiJi = entity.getDongMoShiJi();
        if (dongMoShiJi != null) {
            stmt.bindString(15, dongMoShiJi);
        }
 
        String huaKuaiShiJi = entity.getHuaKuaiShiJi();
        if (huaKuaiShiJi != null) {
            stmt.bindString(16, huaKuaiShiJi);
        }
        stmt.bindDouble(17, entity.getLuoGanZhiJing());
        stmt.bindDouble(18, entity.getYuanLiao());
        stmt.bindDouble(19, entity.getLuoGanZhuanSu());
        stmt.bindDouble(20, entity.getZhuanFenZhong());
    }

    @Override
    protected final void attachEntity(Step4Resbean entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Step4Resbean readEntity(Cursor cursor, int offset) {
        Step4Resbean entity = new Step4Resbean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // step4Id
            cursor.getShort(offset + 1) != 0, // currentStepIsChecked
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // penzui
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // one
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // two
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // three
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // four
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // five
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // xiaLiaoKou
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // checkTemp
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // dingMoSheDing
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // dongMoSheDing
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // huaKuaiSheDing
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // dingMoShiJi
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // dongMoShiJi
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // huaKuaiShiJi
            cursor.getDouble(offset + 16), // luoGanZhiJing
            cursor.getDouble(offset + 17), // yuanLiao
            cursor.getDouble(offset + 18), // luoGanZhuanSu
            cursor.getDouble(offset + 19) // zhuanFenZhong
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Step4Resbean entity, int offset) {
        entity.setStep4Id(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setCurrentStepIsChecked(cursor.getShort(offset + 1) != 0);
        entity.setPenzui(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setOne(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setTwo(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setThree(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setFour(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setFive(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setXiaLiaoKou(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setCheckTemp(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setDingMoSheDing(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setDongMoSheDing(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setHuaKuaiSheDing(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setDingMoShiJi(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setDongMoShiJi(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setHuaKuaiShiJi(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setLuoGanZhiJing(cursor.getDouble(offset + 16));
        entity.setYuanLiao(cursor.getDouble(offset + 17));
        entity.setLuoGanZhuanSu(cursor.getDouble(offset + 18));
        entity.setZhuanFenZhong(cursor.getDouble(offset + 19));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Step4Resbean entity, long rowId) {
        entity.setStep4Id(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Step4Resbean entity) {
        if(entity != null) {
            return entity.getStep4Id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Step4Resbean entity) {
        return entity.getStep4Id() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
