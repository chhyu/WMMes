package com.weimi.wmmess.business.shimu.bean.step5;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.weimi.wmmess.business.shimu.bean.DaoSession;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "STEP5_RESBEAN".
*/
public class Step5ResbeanDao extends AbstractDao<Step5Resbean, Long> {

    public static final String TABLENAME = "STEP5_RESBEAN";

    /**
     * Properties of entity Step5Resbean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Step5Id = new Property(0, Long.class, "step5Id", true, "_id");
        public final static Property CurrentStepIsChecked = new Property(1, boolean.class, "currentStepIsChecked", false, "CURRENT_STEP_IS_CHECKED");
        public final static Property KaiMoSheDingSj = new Property(2, String.class, "kaiMoSheDingSj", false, "KAI_MO_SHE_DING_SJ");
        public final static Property KaiMoShiJiSj = new Property(3, String.class, "kaiMoShiJiSj", false, "KAI_MO_SHI_JI_SJ");
        public final static Property DingChuSheDingSj = new Property(4, String.class, "dingChuSheDingSj", false, "DING_CHU_SHE_DING_SJ");
        public final static Property DingChuShiJiSj = new Property(5, String.class, "dingChuShiJiSj", false, "DING_CHU_SHI_JI_SJ");
        public final static Property DingTuiSheDingSj = new Property(6, String.class, "dingTuiSheDingSj", false, "DING_TUI_SHE_DING_SJ");
        public final static Property DingTuiShiJiSj = new Property(7, String.class, "dingTuiShiJiSj", false, "DING_TUI_SHI_JI_SJ");
        public final static Property HeMoSheDingSj = new Property(8, String.class, "heMoSheDingSj", false, "HE_MO_SHE_DING_SJ");
        public final static Property HeMoShiJiSj = new Property(9, String.class, "heMoShiJiSj", false, "HE_MO_SHI_JI_SJ");
        public final static Property LengQueSj = new Property(10, String.class, "lengQueSj", false, "LENG_QUE_SJ");
        public final static Property XunHuanZhouQi = new Property(11, String.class, "xunHuanZhouQi", false, "XUN_HUAN_ZHOU_QI");
        public final static Property One = new Property(12, int.class, "one", false, "ONE");
        public final static Property Two = new Property(13, int.class, "two", false, "TWO");
        public final static Property Three = new Property(14, int.class, "three", false, "THREE");
        public final static Property Four = new Property(15, int.class, "four", false, "FOUR");
        public final static Property Five = new Property(16, int.class, "five", false, "FIVE");
        public final static Property Six = new Property(17, int.class, "six", false, "SIX");
        public final static Property Seven = new Property(18, int.class, "seven", false, "SEVEN");
        public final static Property Eight = new Property(19, int.class, "eight", false, "EIGHT");
        public final static Property Nine = new Property(20, int.class, "nine", false, "NINE");
        public final static Property Ten = new Property(21, int.class, "ten", false, "TEN");
        public final static Property Eleven = new Property(22, int.class, "eleven", false, "ELEVEN");
    }


    public Step5ResbeanDao(DaoConfig config) {
        super(config);
    }
    
    public Step5ResbeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"STEP5_RESBEAN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: step5Id
                "\"CURRENT_STEP_IS_CHECKED\" INTEGER NOT NULL ," + // 1: currentStepIsChecked
                "\"KAI_MO_SHE_DING_SJ\" TEXT," + // 2: kaiMoSheDingSj
                "\"KAI_MO_SHI_JI_SJ\" TEXT," + // 3: kaiMoShiJiSj
                "\"DING_CHU_SHE_DING_SJ\" TEXT," + // 4: dingChuSheDingSj
                "\"DING_CHU_SHI_JI_SJ\" TEXT," + // 5: dingChuShiJiSj
                "\"DING_TUI_SHE_DING_SJ\" TEXT," + // 6: dingTuiSheDingSj
                "\"DING_TUI_SHI_JI_SJ\" TEXT," + // 7: dingTuiShiJiSj
                "\"HE_MO_SHE_DING_SJ\" TEXT," + // 8: heMoSheDingSj
                "\"HE_MO_SHI_JI_SJ\" TEXT," + // 9: heMoShiJiSj
                "\"LENG_QUE_SJ\" TEXT," + // 10: lengQueSj
                "\"XUN_HUAN_ZHOU_QI\" TEXT," + // 11: xunHuanZhouQi
                "\"ONE\" INTEGER NOT NULL ," + // 12: one
                "\"TWO\" INTEGER NOT NULL ," + // 13: two
                "\"THREE\" INTEGER NOT NULL ," + // 14: three
                "\"FOUR\" INTEGER NOT NULL ," + // 15: four
                "\"FIVE\" INTEGER NOT NULL ," + // 16: five
                "\"SIX\" INTEGER NOT NULL ," + // 17: six
                "\"SEVEN\" INTEGER NOT NULL ," + // 18: seven
                "\"EIGHT\" INTEGER NOT NULL ," + // 19: eight
                "\"NINE\" INTEGER NOT NULL ," + // 20: nine
                "\"TEN\" INTEGER NOT NULL ," + // 21: ten
                "\"ELEVEN\" INTEGER NOT NULL );"); // 22: eleven
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"STEP5_RESBEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Step5Resbean entity) {
        stmt.clearBindings();
 
        Long step5Id = entity.getStep5Id();
        if (step5Id != null) {
            stmt.bindLong(1, step5Id);
        }
        stmt.bindLong(2, entity.getCurrentStepIsChecked() ? 1L: 0L);
 
        String kaiMoSheDingSj = entity.getKaiMoSheDingSj();
        if (kaiMoSheDingSj != null) {
            stmt.bindString(3, kaiMoSheDingSj);
        }
 
        String kaiMoShiJiSj = entity.getKaiMoShiJiSj();
        if (kaiMoShiJiSj != null) {
            stmt.bindString(4, kaiMoShiJiSj);
        }
 
        String dingChuSheDingSj = entity.getDingChuSheDingSj();
        if (dingChuSheDingSj != null) {
            stmt.bindString(5, dingChuSheDingSj);
        }
 
        String dingChuShiJiSj = entity.getDingChuShiJiSj();
        if (dingChuShiJiSj != null) {
            stmt.bindString(6, dingChuShiJiSj);
        }
 
        String dingTuiSheDingSj = entity.getDingTuiSheDingSj();
        if (dingTuiSheDingSj != null) {
            stmt.bindString(7, dingTuiSheDingSj);
        }
 
        String dingTuiShiJiSj = entity.getDingTuiShiJiSj();
        if (dingTuiShiJiSj != null) {
            stmt.bindString(8, dingTuiShiJiSj);
        }
 
        String heMoSheDingSj = entity.getHeMoSheDingSj();
        if (heMoSheDingSj != null) {
            stmt.bindString(9, heMoSheDingSj);
        }
 
        String heMoShiJiSj = entity.getHeMoShiJiSj();
        if (heMoShiJiSj != null) {
            stmt.bindString(10, heMoShiJiSj);
        }
 
        String lengQueSj = entity.getLengQueSj();
        if (lengQueSj != null) {
            stmt.bindString(11, lengQueSj);
        }
 
        String xunHuanZhouQi = entity.getXunHuanZhouQi();
        if (xunHuanZhouQi != null) {
            stmt.bindString(12, xunHuanZhouQi);
        }
        stmt.bindLong(13, entity.getOne());
        stmt.bindLong(14, entity.getTwo());
        stmt.bindLong(15, entity.getThree());
        stmt.bindLong(16, entity.getFour());
        stmt.bindLong(17, entity.getFive());
        stmt.bindLong(18, entity.getSix());
        stmt.bindLong(19, entity.getSeven());
        stmt.bindLong(20, entity.getEight());
        stmt.bindLong(21, entity.getNine());
        stmt.bindLong(22, entity.getTen());
        stmt.bindLong(23, entity.getEleven());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Step5Resbean entity) {
        stmt.clearBindings();
 
        Long step5Id = entity.getStep5Id();
        if (step5Id != null) {
            stmt.bindLong(1, step5Id);
        }
        stmt.bindLong(2, entity.getCurrentStepIsChecked() ? 1L: 0L);
 
        String kaiMoSheDingSj = entity.getKaiMoSheDingSj();
        if (kaiMoSheDingSj != null) {
            stmt.bindString(3, kaiMoSheDingSj);
        }
 
        String kaiMoShiJiSj = entity.getKaiMoShiJiSj();
        if (kaiMoShiJiSj != null) {
            stmt.bindString(4, kaiMoShiJiSj);
        }
 
        String dingChuSheDingSj = entity.getDingChuSheDingSj();
        if (dingChuSheDingSj != null) {
            stmt.bindString(5, dingChuSheDingSj);
        }
 
        String dingChuShiJiSj = entity.getDingChuShiJiSj();
        if (dingChuShiJiSj != null) {
            stmt.bindString(6, dingChuShiJiSj);
        }
 
        String dingTuiSheDingSj = entity.getDingTuiSheDingSj();
        if (dingTuiSheDingSj != null) {
            stmt.bindString(7, dingTuiSheDingSj);
        }
 
        String dingTuiShiJiSj = entity.getDingTuiShiJiSj();
        if (dingTuiShiJiSj != null) {
            stmt.bindString(8, dingTuiShiJiSj);
        }
 
        String heMoSheDingSj = entity.getHeMoSheDingSj();
        if (heMoSheDingSj != null) {
            stmt.bindString(9, heMoSheDingSj);
        }
 
        String heMoShiJiSj = entity.getHeMoShiJiSj();
        if (heMoShiJiSj != null) {
            stmt.bindString(10, heMoShiJiSj);
        }
 
        String lengQueSj = entity.getLengQueSj();
        if (lengQueSj != null) {
            stmt.bindString(11, lengQueSj);
        }
 
        String xunHuanZhouQi = entity.getXunHuanZhouQi();
        if (xunHuanZhouQi != null) {
            stmt.bindString(12, xunHuanZhouQi);
        }
        stmt.bindLong(13, entity.getOne());
        stmt.bindLong(14, entity.getTwo());
        stmt.bindLong(15, entity.getThree());
        stmt.bindLong(16, entity.getFour());
        stmt.bindLong(17, entity.getFive());
        stmt.bindLong(18, entity.getSix());
        stmt.bindLong(19, entity.getSeven());
        stmt.bindLong(20, entity.getEight());
        stmt.bindLong(21, entity.getNine());
        stmt.bindLong(22, entity.getTen());
        stmt.bindLong(23, entity.getEleven());
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Step5Resbean readEntity(Cursor cursor, int offset) {
        Step5Resbean entity = new Step5Resbean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // step5Id
            cursor.getShort(offset + 1) != 0, // currentStepIsChecked
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // kaiMoSheDingSj
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // kaiMoShiJiSj
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // dingChuSheDingSj
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // dingChuShiJiSj
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // dingTuiSheDingSj
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // dingTuiShiJiSj
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // heMoSheDingSj
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // heMoShiJiSj
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // lengQueSj
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // xunHuanZhouQi
            cursor.getInt(offset + 12), // one
            cursor.getInt(offset + 13), // two
            cursor.getInt(offset + 14), // three
            cursor.getInt(offset + 15), // four
            cursor.getInt(offset + 16), // five
            cursor.getInt(offset + 17), // six
            cursor.getInt(offset + 18), // seven
            cursor.getInt(offset + 19), // eight
            cursor.getInt(offset + 20), // nine
            cursor.getInt(offset + 21), // ten
            cursor.getInt(offset + 22) // eleven
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Step5Resbean entity, int offset) {
        entity.setStep5Id(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setCurrentStepIsChecked(cursor.getShort(offset + 1) != 0);
        entity.setKaiMoSheDingSj(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setKaiMoShiJiSj(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setDingChuSheDingSj(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setDingChuShiJiSj(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setDingTuiSheDingSj(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setDingTuiShiJiSj(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setHeMoSheDingSj(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setHeMoShiJiSj(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setLengQueSj(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setXunHuanZhouQi(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setOne(cursor.getInt(offset + 12));
        entity.setTwo(cursor.getInt(offset + 13));
        entity.setThree(cursor.getInt(offset + 14));
        entity.setFour(cursor.getInt(offset + 15));
        entity.setFive(cursor.getInt(offset + 16));
        entity.setSix(cursor.getInt(offset + 17));
        entity.setSeven(cursor.getInt(offset + 18));
        entity.setEight(cursor.getInt(offset + 19));
        entity.setNine(cursor.getInt(offset + 20));
        entity.setTen(cursor.getInt(offset + 21));
        entity.setEleven(cursor.getInt(offset + 22));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Step5Resbean entity, long rowId) {
        entity.setStep5Id(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Step5Resbean entity) {
        if(entity != null) {
            return entity.getStep5Id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Step5Resbean entity) {
        return entity.getStep5Id() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
